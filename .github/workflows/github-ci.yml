name: Release Prod
on:
  push:
    branches:
      - "feature/*"
  workflow_dispatch:

jobs:
  pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      AWS_REPO_URL: public.ecr.aws/k7l1b1b0
      AWS_REPO_NAME: ecr-br-test
      TAG: 0.9.10
      EKS_CLUSTER: EKS-CREASYS-TRANSFERENCIAS-CLUSTER-01
      K8S_MANIFESTS: ./k8s
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.KEY_ID }}
          aws-region: us-east-1
      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
      - name: Build and push docker image
        run: |
          docker build -t ${{ env.AWS_REPO_NAME }}:latest .
          docker tag ${{ env.AWS_REPO_NAME }}:latest ${{ env.AWS_REPO_URL }}/${{ env.AWS_REPO_NAME }}:${{ env.TAG}}
          docker push ${{ env.AWS_REPO_URL }}/${{ env.AWS_REPO_NAME }}:${{ env.TAG}}
      - name: Connect to EKS Cluster
        run: |
          aws eks update-kubeconfig --region us-east-1 --name ${{ env.EKS_CLUSTER}}
      - name: Deploy Hello World
        run: |
          kubectl apply -f ${{ env.K8S_MANIFESTS}}/
